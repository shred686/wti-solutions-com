---
export interface Props {
  title: string;
  subtitle: string;
  description: string;
  imageLeft?: boolean;
  bgColor?: string;
  backgroundImage?: string;
  gradientColor?: 'white' | 'black';
  backgroundStyle?: string;
  id?: string;
}

const { title, subtitle, description, imageLeft = true, bgColor = "bg-plum-charcoal-50", backgroundImage, gradientColor = 'black', backgroundStyle, id } = Astro.props;

// Determine text colors based on gradient color
const textColors = gradientColor === 'white' ? {
  label: 'text-plum-charcoal-600',
  title: 'text-plum-charcoal-900',
  subtitle: 'text-plum-charcoal-600',
  description: 'text-plum-charcoal-600',
  button: 'bg-plum-charcoal-800 text-white hover:bg-plum-charcoal-900'
} : {
  label: 'text-white',
  title: 'text-white',
  subtitle: 'text-white',
  description: 'text-white',
  button: 'bg-white text-plum-charcoal-900 hover:bg-gray-100'
};
---

<style>
  /* Initialization styles for scroll animations */
  div[style*="backdrop-blur"] {
    transition: opacity 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94), transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  .case-study-blur-box {
    transition: opacity 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94), transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
  
  .case-study-content h2, .case-study-content h3, .case-study-content p, .case-study-content a, .case-study-content .text-sm {
    transition: opacity 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94), transform 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
</style>

<script>
  // Component uses ScrollAnimator from IntroSection
</script>

<section class="py-16 relative" data-section-type="case-study" id={id} style={backgroundStyle || `${bgColor}`}>
  <!-- Background image -->
  {backgroundImage && (
    <div 
      class="absolute inset-0 bg-cover bg-center bg-no-repeat z-0"
      style={`background-image: url(${backgroundImage})`}
    ></div>
  )}
  
  <!-- Text background box - positioned relative to page edge -->
  <div class={`absolute ${imageLeft ? 'left-0' : 'right-0'} top-1/2 transform -translate-y-1/2 ${gradientColor === 'white' ? 'bg-white/20' : 'bg-black/20'} backdrop-blur-lg rounded-lg shadow-2xl case-study-blur-box`} style="width: 50%; height: 70%; box-shadow: 0 0 40px rgba(0,0,0,0.3);"></div>

  <div class="max-w-7xl mx-auto px-1 sm:px-2 lg:px-4 py-16 relative z-10">
    <div class={`grid grid-cols-1 lg:grid-cols-2 gap-16 items-center ${imageLeft ? '' : 'lg:grid-flow-col-dense'}`}>

      <!-- Content Side -->
      <div class={`${imageLeft ? 'lg:order-1' : 'lg:order-2'} space-y-6 relative z-20`}>
        <!-- Text content -->
        <div class="case-study-content relative z-30 space-y-5 p-8">
          <div class={`text-sm font-medium ${textColors.label} uppercase tracking-wider`}>
            Case Study
          </div>

          <h2 class={`text-4xl md:text-5xl lg:text-6xl font-light ${textColors.title} leading-tight`}>
            {title}
          </h2>

          <h3 class={`text-xl md:text-2xl ${textColors.subtitle} font-light`}>
            {subtitle}
          </h3>

          <p class={`${textColors.description} leading-relaxed`}>
            {description}
          </p>

          <div class="pt-8">
            <a href="#contact" class={`${textColors.button} px-8 py-4 rounded-lg text-lg font-medium transition-all duration-300 transform hover:scale-105`}>
              Read case study
            </a>
          </div>
        </div>
      </div>

      <!-- Empty space for visual balance - background image shows through -->
      <div class={`${imageLeft ? 'lg:order-2' : 'lg:order-1'} relative`}>
        <!-- This div is intentionally empty to let the background image show through -->
      </div>
    </div>
  </div>
</section> 